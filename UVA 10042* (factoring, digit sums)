#include <iostream>
#include <string>
#include <map>
#include <cctype>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <sstream>
#include <cmath>
#include <queue>
#include <functional>
typedef long long ll;
using namespace std;

int digitsum(int);
int factorsum(int);
int smith(int);
bool prime(int);

int main() {
	int t;
	int n;
	while (cin >> t) {
		while (t--) {
			cin >> n;
			cout << smith(n) << '\n';
		}
	}
	return 0;
}

int digitsum(int n) {
	int sum = 0;
	int temp = n;
	while (temp) {
		sum += temp % 10;
		temp /= 10;
	}
	return sum;
}
int smith(int n) {
	for (int i = n;; ++i)
		if (factorsum(i) == digitsum(i)&&(!prime(i)))
			return i;
}
int factorsum(int n) {
	int sum = 0;
	while (n % 2 == 0) {
		sum += 2;
		n /= 2;
	}
	if (n == 1)
		return sum;
	else {
		for (int i = 3; i <= sqrt(n); ++i) {
			while (n%i == 0) {
				sum += digitsum(i);
				n /= i;
			}
			if (n == 1)
				return sum;
		}
		if (n != 1)
			return sum + digitsum(n);
		return sum;
	}
}
bool prime(int n) {
	if (n == 2)
		return true;
	if (n % 2 == 0)
		return false;
	for (int i = 3; i<=sqrt(n); i += 2) {
		if (n % i == 0 && n / i != 1)
			return false;
	}
	return true;
}
