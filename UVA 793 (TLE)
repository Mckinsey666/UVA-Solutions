
#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <cmath>
#include <queue>
#include <functional>
#include <time.h>
#include <cstdlib>
#include <queue>
#include <map>
#include <sstream>
#include <list>
#include <stack>

using namespace std;

int n;
char c;
vector<int>cc;

struct query {
	int i;
	int j;
};
void combine(int i, int j) {
	int p = cc[i], q = cc[j];
	for (int k = 0; k < n; ++k)
		if (cc[k] == q)
			cc[k] = p;
}
bool connected(int i, int j) {
	return cc[i] == cc[j];
}

int main() {
	int t, i, j;
	while (cin >> t) {
		while (t--) {
			cc.clear();
			cin >> n; c = getchar();//next line
			for (int i = 0; i <= n; ++i)
				cc.push_back(i);
			int ct = 0, asks = 0;
			while ((c = getchar()) != '\n') {
				cin >> i >> j;
				cout << c << '\n';
				if (c == 'c') combine(i, j);
				else {
					asks++; 
					if(connected(i, j)) ct++;
				}
				c = getchar();
			}
			cout << ct << ',' << asks - ct;
			if (t) cout << '\n';
		}
	}
	return 0;
}
