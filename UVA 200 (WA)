// UVa.cpp : 定義主控台應用程式的進入點。
//

#include "stdafx.h"
#include <iostream>
#include <bitset>
#include <vector>
#include <string>
#include <cmath>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>
#include <iomanip>
#include <cstring>
#include <sstream>
#include <stack>
#define len 26
using namespace std;


int main() {
	vector<int> ad[len];
	int marked[len] = { 0 };
	int to[len] = { 0 };
	int valid[len] = { 0 };

	string a, b;
	cin >> a;
	while (cin >> b&&b[0] != '#') {
		bool fail = false;
		int i;
		for (i = 0;; i++) {
			if (i == a.size() || i == b.size()) {
				fail = true; break;
			}
			int p = a[i] - 'A', q = b[i] - 'A';
			valid[p] = valid[q] = 1;
			if (a[i] != b[i])
				break;
		}
		if (fail) {
			a = b; continue;
		}
		int p = a[i] - 'A', q = b[i] - 'A';
		ad[p].push_back(q); to[q]++;
		a = b;
	}
	int ct = 0;
	for (int i = 0; i < len; ++i)
		if (valid[i])
			ct++;
	vector<char>ordered;
	for (int i = 0; i < ct; ++i) {
		int pos;
		for (pos = 0; pos < len; ++pos)
			if (valid[pos])
				if (!to[pos] && !marked[pos])
					break;
		marked[pos] = 1;
		for (int v : ad[pos])
			to[v]--;
		ordered.push_back(char(pos + 'A'));
	}
	for (int i = 0; i < ct; ++i)
		cout << ordered[i];
	return 0;
}
