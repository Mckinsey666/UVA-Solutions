#include <iostream>
#include <vector>
#include <string>
#include <map>
#define MAX 200010

using namespace std;

int n;
char c;
int cc[MAX];
int ct[MAX];

int root(int i) {
	if (cc[i] == i) return i;
	return cc[i] = root(cc[i]);
}
void combine(int i, int j) {
	i = root(i);
	j = root(j);
	if (i != j) {
		cc[i] = j;
		ct[j] += ct[i];
	}
	cout << ct[j] << '\n';
}
bool connected(int i, int j) {
	return root(i) == root(j);
}


int main() {
	int t, k;
	string s1, s2;
	while (cin >> t) {
		while (t--) {
			cin >> k; n = 1;
			for (int i = 0; i < 2 * k; ++i) {
				cc[i] = i; ct[i] = 1;
			}
			map<string, int>name;
			while (k--) {
				cin >> s1 >> s2;
				if (!name[s1]) name[s1] = n++;
				if (!name[s2]) name[s2] = n++;
				combine(name[s1], name[s2]);
			}
		}
	}
	return 0;
}
