#include <iostream>
#include <vector>
#include <cstring>
#include <cmath>
#define maxn 30001

typedef unsigned long long ll;
using namespace std;

ll t[20];
int  used[20];
int cd[20];
ll best = 0;

void find_best(ll, ll, int, int);

int main() {
	int total, tracks;
	while (cin >> total >> tracks) {
		memset(t, 0, sizeof(t));
		memset(used, 0, sizeof(used));
		memset(cd, 0, sizeof(cd));
		best = 0;

		for (int i = 0; i < tracks; ++i)
			cin >> t[i];

		find_best(0, total, 0, tracks);
		for (int i = 0; i < tracks; ++i)
			if (cd[i])
				cout << t[i] << ' ';
		cout <<"sum:"<< best << '\n';
	}
	return 0;
}

void find_best(ll sum, ll total, int i, int n) {
	if (i == n) {
		if (total - sum < total - best) {
			best = sum;
			for (int j = 0; j < n; ++j)
				cd[j] = used[j];
		}
		return;
	}
	if (sum + t[i] <= total) {
		used[i] = 1;
		find_best(sum+t[i], total, i + 1, n);
	}
	used[i] = 0;
	find_best(sum, total, i + 1, n);
}
