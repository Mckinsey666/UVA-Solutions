#include <iostream>
#include <vector>
#include <cstring>
#include <cmath>
#include <iomanip>
#include <algorithm>
#include <cstdio>
#include <set>
#include <map>
#include <string>
#include <cassert>
#include <sstream>
using namespace std;

bool comp(string&, string&);

int main() {
	int n;
	while (cin >> n) {
		string s;
		while (n--) {
			set<string>ct;
			vector<string>words;
			cin >> s;
			sort(s.begin(), s.end());
			do {
				if (ct.count(s) != 1) {
					ct.insert(s);
					words.push_back(s);
				}
			} while (next_permutation(s.begin(), s.end()));
			sort(words.begin(), words.end(), comp);
			for (auto it = words.begin(); it != words.end(); ++it) 
					cout << *it << '\n';
		}
	}
	return 0;
}

bool comp(string& s1, string& s2) {
	if (s1[0] == s2[0]) {
		string sub1 = s1.substr(1, s1.length() - 1), sub2 = s2.substr(1, s2.length() - 1);
		return comp(sub1, sub2);
	}
	else {
		if (tolower(s1[0]) != tolower(s2[0]))
			return tolower(s1[0]) < tolower(s2[0]);
		else if (isupper(s1[0] && islower(s2[0])))
			return true;
	}
	return false;
}
